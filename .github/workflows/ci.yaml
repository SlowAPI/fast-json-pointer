# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
name: "CI"

on: [push, pull_request]

jobs:
  test:
    name: "Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'
    
      - name: Install package under test
        run: poetry install -E cli

      - name: Run tests
        run: poetry run pytest --cov=fast_json_pointer --cov-report lcov tests/ --doctest-modules src/

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          path-to-lcov: coverage.lcov
          github-token: ${{ secrets.GITHUB_TOKEN }}

  diff-scan:
    name: "Diff scan"
    runs-on: ubuntu-latest
    outputs:
      bump: ${{ steps.compare-poetry.outputs.bump }}
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Install tomlq
        run: pipx install tomlq

      - name: Compare poetry version
        id: compare-poetry
        run: |
          OLD="$(git show ${{github.ref}}~:pyproject.toml | tomlq tool.poetry.version)"
          NEW="$(cat pyproject.toml | tomlq tool.poetry.version)"
                    
          if [ "$OLD" = "$NEW" ]; then
              echo "bump=true" >> $GITHUB_OUTPUT
          else
            echo "bump=false" >> $GITHUB_OUTPUT
          fi

  test-publish:
    name: "TestPyPI"
    if: ${{! startsWith(github.ref, 'refs/tags/v') && needs.diff-scan.outputs.bump }}
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      
      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
          cache: 'poetry'
    
      - name: Set package version
        run: poetry version "$(poetry version)"

      - name: Build a binary wheel and a source tarball
        run: poetry build

      - name: Publish to test PyPI
        run: |
          poetry config repo.test-pypi https://test.pypi.org/legacy/
          poetry config pypi-token.test-pypi '${{ secrets.TEST_PYPI_API_TOKEN }}'
          poetry publish --repository=test-pypi

  publish:
    name: "PyPI"
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
          cache: 'poetry'
    
      - name: Set package version
        run: poetry version $(git describe --tags --abbrev=0)

      - name: Build a binary wheel and a source tarball
        run:  poetry build

      - name: Create github release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*

      - name: Publish to PyPI
        run: poetry publish --username=__token__
        env:
          PYPI_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
 
