# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
name: "CI"

on: [push, pull_request]

jobs:
  testing:
    name: "Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'
    
      #- name: Set package version
      #  run: |
      #    curl -sSL https://install.python-poetry.org | python3 -
      #    poetry version $(git describe --tags --abbrev=0)
       
      - name: Install and run tests
        run: |
          poetry install -E cli
          poetry run pytest --cov=fast_json_pointer --cov-report lcov tests/ --doctest-modules src/

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          path-to-lcov: coverage.lcov
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build-n-test-publish:
    name: "TestPyPI"
    if: "! startsWith(github.ref, 'refs/tags/v')"
    needs: [testing]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
          cache: 'poetry'
    
      - name: Set package version
        run: |
          poetry version $(git rev-parse --short HEAD)

      - name: Build a binary wheel and a source tarball
        run: poetry run build --sdist --wheel --outdir dist/

      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  build-n-publish:
    name: "PyPI"
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [testing]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
          cache: 'poetry'
    
      - name: Set package version
        run: |
          poetry version $(git describe --tags --abbrev=0)

      - name: Build a binary wheel and a source tarball
        run:  poetry run build --sdist --wheel --outdir dist/

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
      
      - name: "Publish distribution to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: '${{ secrets.PYPI_API_TOKEN }}'
